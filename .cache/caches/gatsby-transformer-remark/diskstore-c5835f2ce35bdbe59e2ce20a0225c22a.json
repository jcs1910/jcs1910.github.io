{"expireTime":9007200822671504000,"key":"transformer-remark-markdown-ast-4fb33020da35c8e90afa10b0c9ba983a-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"There are two existing ways to format Strings. One is string modulo operator(%) and the other is str.format(value). The former is old and the latter is relatively new.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":168,"offset":168},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":168,"offset":168},"indent":[]}},{"type":"html","value":"<figure>\n    <img src=\"/media/20190802-photo1.jpeg\" alt=\"unsplash-film\">\n    <!-- <figcaption>Splendid</figcaption> -->\n</figure>","position":{"start":{"line":4,"column":1,"offset":170},"end":{"line":7,"column":10,"offset":299},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Syntax: {}.format(value)","position":{"start":{"line":9,"column":5,"offset":305},"end":{"line":9,"column":29,"offset":329},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":303},"end":{"line":9,"column":31,"offset":331},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":303},"end":{"line":9,"column":31,"offset":331},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":301},"end":{"line":9,"column":31,"offset":331},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"(value) : Can be an integer, floating point numeric constant, string, characters or even variables.","position":{"start":{"line":10,"column":5,"offset":336},"end":{"line":10,"column":104,"offset":435},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":334},"end":{"line":10,"column":106,"offset":437},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":334},"end":{"line":10,"column":106,"offset":437},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":332},"end":{"line":10,"column":106,"offset":437},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":301},"end":{"line":10,"column":106,"offset":437},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#1-string-modulo-operator","title":null,"data":{"hProperties":{"aria-label":"1 string modulo operator permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"1. string modulo operator(%)","position":{"start":{"line":12,"column":5,"offset":443},"end":{"line":12,"column":33,"offset":471},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":439},"end":{"line":12,"column":33,"offset":471},"indent":[]},"data":{"id":"1-string-modulo-operator","htmlAttributes":{"id":"1-string-modulo-operator"},"hProperties":{"id":"1-string-modulo-operator"}}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token comment\">#2</span>\n    <span class=\"token builtin\">format</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"there is %s culture among %s\"</span>\n    wecode <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"implict-rule\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wecoders\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">format</span> <span class=\"token operator\">%</span> wecode<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":14,"column":1,"offset":473},"end":{"line":19,"column":4,"offset":606},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#2-strformatvalue","title":null,"data":{"hProperties":{"aria-label":"2 strformatvalue permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"2. str.format(value)","position":{"start":{"line":21,"column":5,"offset":612},"end":{"line":21,"column":25,"offset":632},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":608},"end":{"line":21,"column":25,"offset":632},"indent":[]},"data":{"id":"2-strformatvalue","htmlAttributes":{"id":"2-strformatvalue"},"hProperties":{"id":"2-strformatvalue"}}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token comment\">#1</span>\n    wecode <span class=\"token operator\">=</span> <span class=\"token string\">'We are {} who believe are creating wealth every time we write {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wecoders\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>wecode<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">#2</span>\n    wecode <span class=\"token operator\">=</span> <span class=\"token string\">'{0} are writing {1} '</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wecoders\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>wecode<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":23,"column":1,"offset":634},"end":{"line":31,"column":4,"offset":868},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are so many cool stuff coming out every day in programming languages and Python is no different. Why donâ€™t you try more new, easy and improved way to format Strings in Python.","position":{"start":{"line":33,"column":1,"offset":870},"end":{"line":33,"column":182,"offset":1051},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":870},"end":{"line":33,"column":182,"offset":1051},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#1-formatted-string-literals","title":null,"data":{"hProperties":{"aria-label":"1 formatted string literals permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"1. Formatted string literals","position":{"start":{"line":35,"column":3,"offset":1055},"end":{"line":35,"column":31,"offset":1083},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1053},"end":{"line":35,"column":31,"offset":1083},"indent":[]},"data":{"id":"1-formatted-string-literals","htmlAttributes":{"id":"1-formatted-string-literals"},"hProperties":{"id":"1-formatted-string-literals"}}},{"type":"paragraph","children":[{"type":"text","value":"Formatted string literals was joined in Python 3.6, which was written by Eric V. Smith in August of 2015. ","position":{"start":{"line":37,"column":1,"offset":1085},"end":{"line":37,"column":107,"offset":1191},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"F-strings","position":{"start":{"line":37,"column":109,"offset":1193},"end":{"line":37,"column":118,"offset":1202},"indent":[]}}],"position":{"start":{"line":37,"column":107,"offset":1191},"end":{"line":37,"column":120,"offset":1204},"indent":[]}},{"type":"text","value":" are string literals which have an ","position":{"start":{"line":37,"column":120,"offset":1204},"end":{"line":37,"column":155,"offset":1239},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"f","position":{"start":{"line":37,"column":157,"offset":1241},"end":{"line":37,"column":158,"offset":1242},"indent":[]}}],"position":{"start":{"line":37,"column":155,"offset":1239},"end":{"line":37,"column":160,"offset":1244},"indent":[]}},{"type":"text","value":" at the beginning and ","position":{"start":{"line":37,"column":160,"offset":1244},"end":{"line":37,"column":182,"offset":1266},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"curly braces","position":{"start":{"line":37,"column":184,"offset":1268},"end":{"line":37,"column":196,"offset":1280},"indent":[]}}],"position":{"start":{"line":37,"column":182,"offset":1266},"end":{"line":37,"column":198,"offset":1282},"indent":[]}},{"type":"text","value":" containing expressions that will be replaced with their values. f-strings are known to be faster than old versions of both %-formatting and str.format()","position":{"start":{"line":37,"column":198,"offset":1282},"end":{"line":37,"column":351,"offset":1435},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1085},"end":{"line":37,"column":351,"offset":1435},"indent":[]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz\"</span>\n    age <span class=\"token operator\">=</span> <span class=\"token number\">32</span>\n\n    <span class=\"token comment\">#LowerCase</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Hello, I'm </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> and I'm </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span></span><span class=\"token string\"> years old\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#UpperCase</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">F\"Hello, I'm </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> and I'm </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>age<span class=\"token punctuation\">}</span></span><span class=\"token string\"> years old\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1437},"end":{"line":48,"column":4,"offset":1631},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also interchangeably use capital letter ","position":{"start":{"line":50,"column":1,"offset":1633},"end":{"line":50,"column":49,"offset":1681},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"F.","position":{"start":{"line":50,"column":51,"offset":1683},"end":{"line":50,"column":53,"offset":1685},"indent":[]}}],"position":{"start":{"line":50,"column":49,"offset":1681},"end":{"line":50,"column":55,"offset":1687},"indent":[]}},{"type":"text","value":" Itâ€™s pretty simple and familiar to someone whoâ€™s pro at Javascript. ","position":{"start":{"line":50,"column":55,"offset":1687},"end":{"line":50,"column":124,"offset":1756},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">${variable}</code>","position":{"start":{"line":50,"column":124,"offset":1756},"end":{"line":50,"column":137,"offset":1769},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1633},"end":{"line":50,"column":137,"offset":1769},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Plus, there are multiple use cases of f-strings.","position":{"start":{"line":52,"column":1,"offset":1771},"end":{"line":52,"column":49,"offset":1819},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1771},"end":{"line":52,"column":49,"offset":1819},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Method with strings.","position":{"start":{"line":54,"column":3,"offset":1823},"end":{"line":54,"column":23,"offset":1843},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1823},"end":{"line":54,"column":23,"offset":1843},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1821},"end":{"line":54,"column":23,"offset":1843},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1821},"end":{"line":54,"column":23,"offset":1843},"indent":[]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    name <span class=\"token operator\">=</span> <span class=\"token string\">\"jason mraz\"</span>\n    job <span class=\"token operator\">=</span> <span class=\"token string\">\"SINGER-SONGWRITER\"</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> is a great </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>job<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">!!\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":56,"column":1,"offset":1845},"end":{"line":61,"column":4,"offset":1969},"indent":[1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Call functions","position":{"start":{"line":63,"column":3,"offset":1973},"end":{"line":63,"column":17,"offset":1987},"indent":[]}}],"position":{"start":{"line":63,"column":3,"offset":1973},"end":{"line":63,"column":17,"offset":1987},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1971},"end":{"line":63,"column":17,"offset":1987},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1971},"end":{"line":63,"column":17,"offset":1987},"indent":[]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">to_lowercase</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>to_lowercase<span class=\"token punctuation\">(</span><span class=\"token string\">'JASON MRAZ'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":65,"column":1,"offset":1989},"end":{"line":70,"column":4,"offset":2099},"indent":[1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Multiline f-strings and line break","position":{"start":{"line":72,"column":5,"offset":2105},"end":{"line":72,"column":39,"offset":2139},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":2103},"end":{"line":72,"column":41,"offset":2141},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":2103},"end":{"line":72,"column":41,"offset":2141},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2101},"end":{"line":73,"column":1,"offset":2142},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You always need to put an f(or F) in front of each line of a multiline string in order for Python to read code properly.","position":{"start":{"line":74,"column":4,"offset":2146},"end":{"line":74,"column":124,"offset":2266},"indent":[]}}],"position":{"start":{"line":74,"column":4,"offset":2146},"end":{"line":74,"column":124,"offset":2266},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2143},"end":{"line":74,"column":124,"offset":2266},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2101},"end":{"line":74,"column":124,"offset":2266},"indent":[1,1]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz\"</span>\n    job <span class=\"token operator\">=</span> <span class=\"token string\">\"singer-songwriter\"</span>\n    debut_album <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz Live &amp; Acoustic 2001\"</span>\n\n    profile <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"He is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-interpolation\"><span class=\"token string\">F\"a </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>job<span class=\"token punctuation\">}</span></span><span class=\"token string\">, who first came to prominence in San Diego in 2000 and\"</span></span>\n    <span class=\"token string-interpolation\"><span class=\"token string\">F\"his debut album was </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>debut_album<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>profile<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#('He is Jason Mraz', 'a singer-songwriter, who first came to prominence in San Diego in 2000 andhis debut album was Jason Mraz Live &amp; Acoustic 2001')</span></code></pre></div>","position":{"start":{"line":76,"column":1,"offset":2268},"end":{"line":87,"column":4,"offset":2711},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"What is there is no parentheses in the start and end sentences?? Python only reads the first line of a sentence and ignore the following line of sentences.","position":{"start":{"line":89,"column":1,"offset":2713},"end":{"line":89,"column":156,"offset":2868},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2713},"end":{"line":89,"column":156,"offset":2868},"indent":[]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz\"</span>\n    job <span class=\"token operator\">=</span> <span class=\"token string\">\"singer-songwriter\"</span>\n    debut_album <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz Live &amp; Acoustic 2001\"</span>\n\n    profile <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"He is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-interpolation\"><span class=\"token string\">F\"a </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>job<span class=\"token punctuation\">}</span></span><span class=\"token string\">, who first came to prominence in San Diego in 2000 and\"</span></span>\n    <span class=\"token string-interpolation\"><span class=\"token string\">F\"his debut album was </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>debut_album<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>profile<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#('He is Jason Mraz',)</span></code></pre></div>","position":{"start":{"line":91,"column":1,"offset":2870},"end":{"line":102,"column":4,"offset":3179},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To make the code interpreted, you need to use backslash \\ in the end of every sentence so that you can spread strings over multiple lines.","position":{"start":{"line":104,"column":1,"offset":3181},"end":{"line":104,"column":139,"offset":3319},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3181},"end":{"line":104,"column":139,"offset":3319},"indent":[]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz\"</span>\n    job <span class=\"token operator\">=</span> <span class=\"token string\">\"singer-songwriter\"</span>\n    debut_album <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz Live &amp; Acoustic 2001\"</span>\n\n    profile <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"He is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">, \"</span></span>\\\n    <span class=\"token string-interpolation\"><span class=\"token string\">F\"a </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>job<span class=\"token punctuation\">}</span></span><span class=\"token string\">, who first came to prominence in San Diego in 2000 and \"</span></span> \\\n    <span class=\"token string-interpolation\"><span class=\"token string\">F\"his debut album was </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>debut_album<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\\\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>profile<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># He is Jason Mraz, a singer-songwriter, who first came to prominence in San Diego in 2000 and his debut album was Jason Mraz Live &amp; Acoustic 2001</span></code></pre></div>","position":{"start":{"line":106,"column":1,"offset":3321},"end":{"line":117,"column":4,"offset":3760},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"But, the better way is to use three double quote \"\"\" and use just one f in the first sentence.","position":{"start":{"line":119,"column":1,"offset":3762},"end":{"line":119,"column":95,"offset":3856},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3762},"end":{"line":119,"column":95,"offset":3856},"indent":[]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz\"</span>\n    job <span class=\"token operator\">=</span> <span class=\"token string\">\"singer-songwriter\"</span>\n    debut_album <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz Live &amp; Acoustic 2001\"</span>\n\n    profile <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"\"\"\n    He is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">, a </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>job<span class=\"token punctuation\">}</span></span><span class=\"token string\">,\n    who first came to prominence\n    in San Diego in 2000 and his debut album was </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>debut_album<span class=\"token punctuation\">}</span></span><span class=\"token string\">\n    \"\"\"</span></span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>profile<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">#He is Jason Mraz, a singer-songwriter,</span>\n    <span class=\"token comment\">#who first came to prominence</span>\n    <span class=\"token comment\">#in San Diego in 2000 and his debut album was Jason Mraz Live &amp; Acoustic 2001</span></code></pre></div>","position":{"start":{"line":121,"column":1,"offset":3858},"end":{"line":137,"column":4,"offset":4309},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#dictionaries","title":null,"data":{"hProperties":{"aria-label":"dictionaries permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Dictionaries","position":{"start":{"line":139,"column":4,"offset":4314},"end":{"line":139,"column":16,"offset":4326},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4311},"end":{"line":139,"column":16,"offset":4326},"indent":[]},"data":{"id":"dictionaries","htmlAttributes":{"id":"dictionaries"},"hProperties":{"id":"dictionaries"}}},{"type":"paragraph","children":[{"type":"text","value":"Be careful with quotation marks when using f-strings. If you want to use a single quotation marks for the keys of the dictionary, you should use different quotation marks. f-strings for a single quotations marks and calling for dictionaries for double quotations marks. Or vice versa.","position":{"start":{"line":141,"column":1,"offset":4328},"end":{"line":141,"column":285,"offset":4612},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":4328},"end":{"line":141,"column":285,"offset":4612},"indent":[]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token comment\">#different quotations marks</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz\"</span>\n    job <span class=\"token operator\">=</span> <span class=\"token string\">\"singer-songwriter\"</span>\n    debut_album <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz Live &amp; Acoustic 2001\"</span>\n\n    Jason_Mraz <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jason Mraz\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'job'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"singer-songwriter\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'His name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>Jason_Mraz<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> and </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>Jason_Mraz<span class=\"token punctuation\">[</span><span class=\"token string\">\"job\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">#different quotations marks</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz\"</span>\n    job <span class=\"token operator\">=</span> <span class=\"token string\">\"singer-songwriter\"</span>\n    debut_album <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz Live &amp; Acoustic 2001\"</span>\n\n    Jason_Mraz <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jason Mraz\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'job'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"singer-songwriter\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"His name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>Jason_Mraz<span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> and </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>Jason_Mraz<span class=\"token punctuation\">[</span><span class=\"token string\">'job'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":143,"column":1,"offset":4614},"end":{"line":159,"column":4,"offset":5184},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":"python","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># You cannot use escape \\ inside the value of dictionary in f-strings.</span>\n\n    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz\"</span>\n    job <span class=\"token operator\">=</span> <span class=\"token string\">\"singer-songwriter\"</span>\n    debut_album <span class=\"token operator\">=</span> <span class=\"token string\">\"Jason Mraz Live &amp; Acoustic 2001\"</span>\n\n    Jason_Mraz <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jason Mraz\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'job'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"singer-songwriter\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">#print(f\"His name is {Jason_Mraz[\"\\name\"\\]} and {Jason_Mraz[\"\\job\"\\]}\")</span></code></pre></div>","position":{"start":{"line":161,"column":1,"offset":5186},"end":{"line":170,"column":4,"offset":5522},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":172,"column":1,"offset":5524},"end":{"line":172,"column":4,"offset":5527},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#we-are-creating-wealth-every-time-we-write-a-code","title":null,"data":{"hProperties":{"aria-label":"we are creating wealth every time we write a code permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"We are creating wealth every time we write a code","position":{"start":{"line":174,"column":4,"offset":5532},"end":{"line":174,"column":53,"offset":5581},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5529},"end":{"line":174,"column":53,"offset":5581},"indent":[]},"data":{"id":"we-are-creating-wealth-every-time-we-write-a-code","htmlAttributes":{"id":"we-are-creating-wealth-every-time-we-write-a-code"},"hProperties":{"id":"we-are-creating-wealth-every-time-we-write-a-code"}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":175,"column":1,"offset":5582}}}}