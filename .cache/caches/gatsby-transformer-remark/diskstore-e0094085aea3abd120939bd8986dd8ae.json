{"expireTime":9007200822671504000,"key":"transformer-remark-markdown-ast-0bfb14c9f852b1621094332ee434b3d7-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"link","url":"#1-destructuring-assignment","title":null,"data":{"hProperties":{"aria-label":"1 destructuring assignment permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"1. Destructuring assignment","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":30,"offset":30},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":30,"offset":30},"indent":[]},"data":{"id":"1-destructuring-assignment","htmlAttributes":{"id":"1-destructuring-assignment"},"hProperties":{"id":"1-destructuring-assignment"}}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.","position":{"start":{"line":4,"column":3,"offset":34},"end":{"line":4,"column":171,"offset":202},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":34},"end":{"line":4,"column":171,"offset":202},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":4,"column":171,"offset":202},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#1-array-destructing","title":null,"data":{"hProperties":{"aria-label":"1 array destructing permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"1) Array Destructing","position":{"start":{"line":6,"column":4,"offset":207},"end":{"line":6,"column":24,"offset":227},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":204},"end":{"line":6,"column":24,"offset":227},"indent":[]},"data":{"id":"1-array-destructing","htmlAttributes":{"id":"1-array-destructing"},"hProperties":{"id":"1-array-destructing"}}},{"type":"paragraph","children":[{"type":"text","value":"The keyword you need to remember in destructuring assignment is “unpack”. It allows us to unpack arrays or objects into a bunch of variables in a more convenient way.","position":{"start":{"line":8,"column":1,"offset":229},"end":{"line":8,"column":167,"offset":395},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":229},"end":{"line":8,"column":167,"offset":395},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"An example of how the array is destructured into variables:","position":{"start":{"line":10,"column":3,"offset":399},"end":{"line":10,"column":62,"offset":458},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":399},"end":{"line":10,"column":62,"offset":458},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":397},"end":{"line":10,"column":62,"offset":458},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":397},"end":{"line":10,"column":62,"offset":458},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> number <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> number<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>two<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//[3,4,5,6,7]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//object</span></code></pre></div>","position":{"start":{"line":12,"column":1,"offset":460},"end":{"line":20,"column":4,"offset":664},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#2-object-destructing","title":null,"data":{"hProperties":{"aria-label":"2 object destructing permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"2) Object Destructing","position":{"start":{"line":22,"column":4,"offset":669},"end":{"line":22,"column":25,"offset":690},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":666},"end":{"line":22,"column":25,"offset":690},"indent":[]},"data":{"id":"2-object-destructing","htmlAttributes":{"id":"2-object-destructing"},"hProperties":{"id":"2-object-destructing"}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"An example of how the object is destructured into variables:","position":{"start":{"line":24,"column":3,"offset":694},"end":{"line":24,"column":63,"offset":754},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":694},"end":{"line":24,"column":63,"offset":754},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":692},"end":{"line":24,"column":63,"offset":754},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":692},"end":{"line":24,"column":63,"offset":754},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> human <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jason\"</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n  lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mraz\"</span><span class=\"token punctuation\">,</span>\n  nationality<span class=\"token punctuation\">:</span> <span class=\"token string\">\"American\"</span><span class=\"token punctuation\">,</span>\n  favPet<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    dog1<span class=\"token punctuation\">:</span> <span class=\"token string\">\"beagle\"</span><span class=\"token punctuation\">,</span>\n    dog2<span class=\"token punctuation\">:</span> <span class=\"token string\">\"bichon\"</span><span class=\"token punctuation\">,</span>\n    dog3<span class=\"token punctuation\">:</span> <span class=\"token string\">\"collie\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> human<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">//inefficient</span>\n<span class=\"token keyword\">const</span> lastName <span class=\"token operator\">=</span> human<span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span> <span class=\"token comment\">//inefficient</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> lastName <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> human<span class=\"token punctuation\">;</span> <span class=\"token comment\">//object destructuring is more efficient</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">,</span>\n  lastName<span class=\"token punctuation\">,</span>\n  nationality<span class=\"token punctuation\">:</span> diffName<span class=\"token punctuation\">,</span> <span class=\"token comment\">//when you don't want to use same variable name</span>\n  favPet<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> dog1<span class=\"token punctuation\">,</span> dog2<span class=\"token punctuation\">,</span> dog3 <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> human<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">,</span> diffName<span class=\"token punctuation\">,</span> dog1<span class=\"token punctuation\">,</span> dog2<span class=\"token punctuation\">,</span> dog3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":26,"column":1,"offset":756},"end":{"line":52,"column":4,"offset":1335},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The curly bracket of value of favPet ","position":{"start":{"line":54,"column":1,"offset":1337},"end":{"line":54,"column":38,"offset":1374},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">{ dog1, dog2, dog3 }</code>","position":{"start":{"line":54,"column":38,"offset":1374},"end":{"line":54,"column":60,"offset":1396},"indent":[]}},{"type":"text","value":" indicates that it is looking for value inside the favPet, which is equal to ","position":{"start":{"line":54,"column":60,"offset":1396},"end":{"line":54,"column":137,"offset":1473},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">human.favePet.dog1</code>","position":{"start":{"line":54,"column":137,"offset":1473},"end":{"line":54,"column":157,"offset":1493},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1337},"end":{"line":54,"column":157,"offset":1493},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are more examples of destructuring assignments like","position":{"start":{"line":56,"column":1,"offset":1495},"end":{"line":56,"column":58,"offset":1552},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1495},"end":{"line":56,"column":58,"offset":1552},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Nested object and array destructuring","position":{"start":{"line":58,"column":3,"offset":1556},"end":{"line":58,"column":40,"offset":1593},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":1556},"end":{"line":58,"column":40,"offset":1593},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1554},"end":{"line":58,"column":40,"offset":1593},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"For of iteration and destructuring","position":{"start":{"line":59,"column":3,"offset":1596},"end":{"line":59,"column":37,"offset":1630},"indent":[]}}],"position":{"start":{"line":59,"column":3,"offset":1596},"end":{"line":59,"column":37,"offset":1630},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1594},"end":{"line":59,"column":37,"offset":1630},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Combined Array and Object Destructuring","position":{"start":{"line":60,"column":3,"offset":1633},"end":{"line":60,"column":42,"offset":1672},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":1633},"end":{"line":60,"column":42,"offset":1672},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1631},"end":{"line":60,"column":42,"offset":1672},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1554},"end":{"line":60,"column":42,"offset":1672},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#2-spread-operator","title":null,"data":{"hProperties":{"aria-label":"2 spread operator permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"2. Spread Operator","position":{"start":{"line":62,"column":3,"offset":1676},"end":{"line":62,"column":21,"offset":1694},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1674},"end":{"line":62,"column":21,"offset":1694},"indent":[]},"data":{"id":"2-spread-operator","htmlAttributes":{"id":"2-spread-operator"},"hProperties":{"id":"2-spread-operator"}}},{"type":"paragraph","children":[{"type":"text","value":"Spread operator with array/objects is used to make a copy of an existing array/objects or to make a new array/object with more properties.","position":{"start":{"line":64,"column":1,"offset":1696},"end":{"line":64,"column":139,"offset":1834},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1696},"end":{"line":64,"column":139,"offset":1834},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Here’s how you can ","position":{"start":{"line":66,"column":3,"offset":1838},"end":{"line":66,"column":22,"offset":1857},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"“combine” two array","position":{"start":{"line":66,"column":24,"offset":1859},"end":{"line":66,"column":43,"offset":1878},"indent":[]}}],"position":{"start":{"line":66,"column":22,"offset":1857},"end":{"line":66,"column":45,"offset":1880},"indent":[]}},{"type":"text","value":" and add one more element.","position":{"start":{"line":66,"column":45,"offset":1880},"end":{"line":66,"column":71,"offset":1906},"indent":[]}}],"position":{"start":{"line":66,"column":3,"offset":1838},"end":{"line":66,"column":71,"offset":1906},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1836},"end":{"line":66,"column":71,"offset":1906},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1836},"end":{"line":66,"column":71,"offset":1906},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ---Spread Operator</span>\n<span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lemon\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> veges <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"cabbage\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"carrot\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tomato\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> fruitVeg <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I love </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>fruits<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>veges<span class=\"token punctuation\">,</span> <span class=\"token string\">\"onion\"</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruitVeg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// I love apple,banana,lemon,cabbage,carrot,tomato,onion</span></code></pre></div>","position":{"start":{"line":68,"column":1,"offset":1908},"end":{"line":75,"column":4,"offset":2179},"indent":[1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Here’s how you can ","position":{"start":{"line":77,"column":3,"offset":2183},"end":{"line":77,"column":22,"offset":2202},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"“combine” two object","position":{"start":{"line":77,"column":24,"offset":2204},"end":{"line":77,"column":44,"offset":2224},"indent":[]}}],"position":{"start":{"line":77,"column":22,"offset":2202},"end":{"line":77,"column":46,"offset":2226},"indent":[]}},{"type":"text","value":" and add one more property ","position":{"start":{"line":77,"column":46,"offset":2226},"end":{"line":77,"column":73,"offset":2253},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">myFourthVege: &quot;onion&quot;</code>","position":{"start":{"line":77,"column":73,"offset":2253},"end":{"line":77,"column":96,"offset":2276},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":77,"column":96,"offset":2276},"end":{"line":77,"column":97,"offset":2277},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":2183},"end":{"line":77,"column":97,"offset":2277},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2181},"end":{"line":77,"column":97,"offset":2277},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2181},"end":{"line":77,"column":97,"offset":2277},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> objFruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  myFirstFruit<span class=\"token punctuation\">:</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span>\n  mySecondFruit<span class=\"token punctuation\">:</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span>\n  myThirdFruit<span class=\"token punctuation\">:</span> <span class=\"token string\">\"lemon\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> objVeges <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  myFirstVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"cabbage\"</span><span class=\"token punctuation\">,</span>\n  mySecondVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"carrot\"</span><span class=\"token punctuation\">,</span>\n  myThirdVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"tomato\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> objFruitVeges <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>objFruits<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>objVeges<span class=\"token punctuation\">,</span> myFourthVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"onion\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objFruitVeges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// myFirstFruit: \"apple\", mySecondFruit: \"banana\", myThirdFruit: \"lemon\", myFirstVege: \"cabbage\", mySecondVege: \"carrot\", myThirdVege: \"tomato\"}</span></code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2279},"end":{"line":95,"column":4,"offset":2744},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here, the ","position":{"start":{"line":97,"column":1,"offset":2746},"end":{"line":97,"column":11,"offset":2756},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">objFruitVegs</code>","position":{"start":{"line":97,"column":11,"offset":2756},"end":{"line":97,"column":25,"offset":2770},"indent":[]}},{"type":"text","value":" has the existing properties of ","position":{"start":{"line":97,"column":25,"offset":2770},"end":{"line":97,"column":57,"offset":2802},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">objFruits, objVeges</code>","position":{"start":{"line":97,"column":57,"offset":2802},"end":{"line":97,"column":78,"offset":2823},"indent":[]}},{"type":"text","value":" as well as a new property ","position":{"start":{"line":97,"column":78,"offset":2823},"end":{"line":97,"column":105,"offset":2850},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">myFourthVeges</code>","position":{"start":{"line":97,"column":105,"offset":2850},"end":{"line":97,"column":120,"offset":2865},"indent":[]}},{"type":"text","value":". If you want to extract value from Object, you can use ","position":{"start":{"line":97,"column":120,"offset":2865},"end":{"line":97,"column":176,"offset":2921},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Object.values().</code>","position":{"start":{"line":97,"column":176,"offset":2921},"end":{"line":97,"column":194,"offset":2939},"indent":[]}},{"type":"text","value":" .It returns an array containing the given object’s own enumerable property value.","position":{"start":{"line":97,"column":194,"offset":2939},"end":{"line":97,"column":276,"offset":3021},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":2746},"end":{"line":97,"column":276,"offset":3021},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> objFruitVeges <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>objFruits<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>objVeges<span class=\"token punctuation\">,</span> myFourthVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"onion\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>objFruitVeges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//[\"apple\", \"banana\", \"lemon\", \"cabbage\", \"carrot\", \"tomato\", \"onion\"]</span></code></pre></div>","position":{"start":{"line":99,"column":1,"offset":3023},"end":{"line":103,"column":4,"offset":3230},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":105,"column":1,"offset":3232},"end":{"line":105,"column":4,"offset":3235},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#we-are-creating-wealth-every-time-we-write-a-code","title":null,"data":{"hProperties":{"aria-label":"we are creating wealth every time we write a code permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"We are creating wealth every time we write a code","position":{"start":{"line":107,"column":4,"offset":3240},"end":{"line":107,"column":53,"offset":3289},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3237},"end":{"line":107,"column":53,"offset":3289},"indent":[]},"data":{"id":"we-are-creating-wealth-every-time-we-write-a-code","htmlAttributes":{"id":"we-are-creating-wealth-every-time-we-write-a-code"},"hProperties":{"id":"we-are-creating-wealth-every-time-we-write-a-code"}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":108,"column":1,"offset":3290}}}}