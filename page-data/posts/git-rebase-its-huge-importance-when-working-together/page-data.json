{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/git-rebase-its-huge-importance-when-working-together/","webpackCompilationHash":"bfc9e615db5bf5b314ae","result":{"data":{"markdownRemark":{"id":"c6e68947-7106-51ee-8222-dee62c0b5b68","html":"<figure>\n    <img src=\"/media/nature-photo3.jpeg\" alt=\"unsplash-film\">\n    <!-- <figcaption>Splendid</figcaption> -->\n</figure>\n<p>I hardly understand the exact use of <code class=\"language-text\">git rebase</code> when I was taught for the first time. But during my pinterest project, I started to learn how necessary it is for the team project where my team members use git together. By using git rebase, I can squash many commits in a single commit which helps me to control commit status. This is the process of git rebase I followed.</p>\n<ol>\n<li>It is safe to copy all of your files before you work on git rebase since you might end up mixing all of your history of commits </li>\n</ol>\n<p><code class=\"language-text\">cp -rpv pinterest-backend pinterest-backend-original</code></p>\n<ol start=\"2\">\n<li>update master branch of local files before git rebase. Since I’m working on branches, you enter below command line</li>\n</ol>\n<p><code class=\"language-text\">git checkout master</code> </p>\n<p><code class=\"language-text\">git pull origin master</code></p>\n<p>Once pulled, you now return to the branch you are currently working on. </p>\n<p><code class=\"language-text\">git checkout users</code></p>\n<h2 id=\"git-rebase\"><a href=\"#git-rebase\" aria-label=\"git rebase permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Git Rebase</h2>\n<p>Now, everything is set. On the terminal, you can choose which commits to use. After you finish all git commits, enter <code class=\"language-text\">git rebase - i</code>  to sum up commits as one. For example, if you are going to use the top commit, you leave it as <code class=\"language-text\">pick</code> and the rest as <code class=\"language-text\">squash or s.</code> </p>\n<figure>\n    <img src=\"/media/git-squash.png\" alt=\"unsplash-film\">\n    <!-- <figcaption>Splendid</figcaption> -->\n</figure>\n<p>Why do we need to use <code class=\"language-text\">git rebase</code> since you can <code class=\"language-text\">git add</code> and <code class=\"language-text\">git commit -m</code> to manage your git status?\n<code class=\"language-text\">git rebase</code> allows us to arrange the orders of commits and prevents all the commits tangled up. You might not know which commits you are looking for when you make a pull request for your each commit. In a nut shell, <code class=\"language-text\">git rebase</code> helps you streamline your all commits so that your master branch won’t get messed up due to the different history of commits from different branches.</p>\n<hr>\n<blockquote>\n<p><strong>We are creating wealth every time we write a code</strong></p>\n</blockquote>","fields":{"slug":"/posts/git-rebase-its-huge-importance-when-working-together/","tagSlugs":["/tag/git/","/tag/git-rebase/"]},"frontmatter":{"date":"2019-09-09T12:15:12.199Z","description":"The importance of using git rebase for team projects","tags":["Git","Git Rebase"],"title":"[Git] Git Rebase - its huge importance when working together"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/git-rebase-its-huge-importance-when-working-together/"}}}