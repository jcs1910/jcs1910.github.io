{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/destructoring-assignment-spread-operator/","webpackCompilationHash":"4c48fe7af45f72ccf1ce","result":{"data":{"markdownRemark":{"id":"941357ae-45b8-5f40-9774-ad1c55321edd","html":"<h1 id=\"1-destructuring-assignment\"><a href=\"#1-destructuring-assignment\" aria-label=\"1 destructuring assignment permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Destructuring assignment</h1>\n<blockquote>\n<p>The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.</p>\n</blockquote>\n<h2 id=\"1-array-destructing\"><a href=\"#1-array-destructing\" aria-label=\"1 array destructing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) Array Destructing</h2>\n<p>The keyword you need to remember in destructuring assignment is “unpack”. It allows us to unpack arrays or objects into a bunch of variables in a more convenient way.</p>\n<ul>\n<li>An example of how the array is destructured into variables:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> number <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> number<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>two<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//[3,4,5,6,7]</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//object</span></code></pre></div>\n<h2 id=\"2-object-destructing\"><a href=\"#2-object-destructing\" aria-label=\"2 object destructing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) Object Destructing</h2>\n<ul>\n<li>An example of how the object is destructured into variables:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> human <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Jason\"</span><span class=\"token punctuation\">,</span>\n  age<span class=\"token punctuation\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n  lastName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mraz\"</span><span class=\"token punctuation\">,</span>\n  nationality<span class=\"token punctuation\">:</span> <span class=\"token string\">\"American\"</span><span class=\"token punctuation\">,</span>\n  favPet<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    dog1<span class=\"token punctuation\">:</span> <span class=\"token string\">\"beagle\"</span><span class=\"token punctuation\">,</span>\n    dog2<span class=\"token punctuation\">:</span> <span class=\"token string\">\"bichon\"</span><span class=\"token punctuation\">,</span>\n    dog3<span class=\"token punctuation\">:</span> <span class=\"token string\">\"collie\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> human<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span> <span class=\"token comment\">//inefficient</span>\n<span class=\"token keyword\">const</span> lastName <span class=\"token operator\">=</span> human<span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span> <span class=\"token comment\">//inefficient</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> lastName <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> human<span class=\"token punctuation\">;</span> <span class=\"token comment\">//object destructuring is more efficient</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">,</span>\n  lastName<span class=\"token punctuation\">,</span>\n  nationality<span class=\"token punctuation\">:</span> diffName<span class=\"token punctuation\">,</span> <span class=\"token comment\">//when you don't want to use same variable name</span>\n  favPet<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> dog1<span class=\"token punctuation\">,</span> dog2<span class=\"token punctuation\">,</span> dog3 <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> human<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> lastName<span class=\"token punctuation\">,</span> diffName<span class=\"token punctuation\">,</span> dog1<span class=\"token punctuation\">,</span> dog2<span class=\"token punctuation\">,</span> dog3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The curly bracket of value of favPet <code class=\"language-text\">{ dog1, dog2, dog3 }</code> indicates that it is looking for value inside the favPet, which is equal to <code class=\"language-text\">human.favePet.dog1</code></p>\n<p>There are more examples of destructuring assignments like</p>\n<ul>\n<li>Nested object and array destructuring</li>\n<li>For of iteration and destructuring</li>\n<li>Combined Array and Object Destructuring</li>\n</ul>\n<h1 id=\"2-spread-operator\"><a href=\"#2-spread-operator\" aria-label=\"2 spread operator permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Spread Operator</h1>\n<p>Spread operator with array/objects is used to make a copy of an existing array/objects or to make a new array/object with more properties.</p>\n<ul>\n<li>Here’s how you can <strong>“combine” two array</strong> and add one more element.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ---Spread Operator</span>\n<span class=\"token keyword\">const</span> fruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lemon\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> veges <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"cabbage\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"carrot\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tomato\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> fruitVeg <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">I love </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>fruits<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>veges<span class=\"token punctuation\">,</span> <span class=\"token string\">\"onion\"</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>fruitVeg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// I love apple,banana,lemon,cabbage,carrot,tomato,onion</span></code></pre></div>\n<ul>\n<li>Here’s how you can <strong>“combine” two object</strong> and add one more property <code class=\"language-text\">myFourthVege: &quot;onion&quot;</code>.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> objFruits <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  myFirstFruit<span class=\"token punctuation\">:</span> <span class=\"token string\">\"apple\"</span><span class=\"token punctuation\">,</span>\n  mySecondFruit<span class=\"token punctuation\">:</span> <span class=\"token string\">\"banana\"</span><span class=\"token punctuation\">,</span>\n  myThirdFruit<span class=\"token punctuation\">:</span> <span class=\"token string\">\"lemon\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> objVeges <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  myFirstVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"cabbage\"</span><span class=\"token punctuation\">,</span>\n  mySecondVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"carrot\"</span><span class=\"token punctuation\">,</span>\n  myThirdVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"tomato\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> objFruitVeges <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>objFruits<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>objVeges<span class=\"token punctuation\">,</span> myFourthVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"onion\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>objFruitVeges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// myFirstFruit: \"apple\", mySecondFruit: \"banana\", myThirdFruit: \"lemon\", myFirstVege: \"cabbage\", mySecondVege: \"carrot\", myThirdVege: \"tomato\"}</span></code></pre></div>\n<p>Here, the <code class=\"language-text\">objFruitVegs</code> has the existing properties of <code class=\"language-text\">objFruits, objVeges</code> as well as a new property <code class=\"language-text\">myFourthVeges</code>. If you want to extract value from Object, you can use <code class=\"language-text\">Object.values().</code> .It returns an array containing the given object’s own enumerable property value.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> objFruitVeges <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>objFruits<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>objVeges<span class=\"token punctuation\">,</span> myFourthVege<span class=\"token punctuation\">:</span> <span class=\"token string\">\"onion\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>objFruitVeges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//[\"apple\", \"banana\", \"lemon\", \"cabbage\", \"carrot\", \"tomato\", \"onion\"]</span></code></pre></div>\n<hr>\n<h2 id=\"we-are-creating-wealth-every-time-we-write-a-code\"><a href=\"#we-are-creating-wealth-every-time-we-write-a-code\" aria-label=\"we are creating wealth every time we write a code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>We are creating wealth every time we write a code</h2>","fields":{"slug":"/posts/destructoring-assignment-spread-operator/","tagSlugs":["/tag/es-6-javascript/","/tag/destructuring-assignment/","/tag/array-destructuring/","/tag/spread-operator/"]},"frontmatter":{"date":"2019-07-29T20:10:32.169Z","description":"The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.","tags":["ES6 Javascript","Destructuring Assignment","Array Destructuring","Spread Operator"],"title":"[JS] Destructuring assignment & Spread Operator"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/destructoring-assignment-spread-operator/"}}}